syntax = "proto3";
option go_package = "grpc";
package grpc;

//pb for rawdata
//agent --> server
message RawData{
  repeated Record Data = 1;
  string AgentID = 2;
  repeated string IntranetIPv4 = 3;
  repeated string ExtranetIPv4 = 4;
  repeated string IntranetIPv6 = 5;
  repeated string ExtranetIPv6 = 6;
  string Hostname = 7;
  string Version = 8;
  string Product = 9;
}

message Record{
  int32 DataType = 1;
  int64 Timestamp = 2;
  bytes Body = 3;
}

message Item{
  map<string,string> Fields = 1;
}

//server --> agent
message Command {
  int32 AgentCtrl = 1; // Agent control command
  PluginTask Task = 2; // Agent task
  repeated ConfigItem Config = 3; // Plugin/Agent-host config
}

message PluginTask{
  //DataType which used to uniquely identify different  format of Data
  int32 DataType = 1;
  // Plugin name, which used to uniquely identify different plugins
  string Name = 2;
  // Data transparently transmitted to the plugin
  string Data = 3;
  // The token is used for reconciliation
  string Token = 4;
}

message ConfigItem{
  string Name = 1;
  string Type = 2;
  string Version = 3;
  string SHA256 = 4;
  string Signature = 5;
  repeated string DownloadURL = 6;
  string Detail = 7;
}


//server -> bmq
message MQData{
  int32 DataType = 1;
  int64 AgentTime = 2;
  bytes Body = 3;

  string AgentID = 4;
  string IntranetIPv4 = 5;
  string ExtranetIPv4 = 6;
  string IntranetIPv6 = 7;
  string ExtranetIPv6 = 8;
  string Hostname = 9;
  string Version = 10;
  string Product = 11;

  //Fields completed on the server
  int64  SvrTime = 12;
  string PSMName = 13;    //Used to identify business
  string PSMPath = 14;    //Used to identify business
  string Tag = 15;        //Used to identify agent group
}

//bmq --> Rule engine
message MQRawData{
  int32 DataType = 1;
  int64 AgentTime = 2;
  Item Body = 3;

  string AgentID = 4;
  string IntranetIPv4 = 5;
  string ExtranetIPv4 = 6;
  string IntranetIPv6 = 7;
  string ExtranetIPv6 = 8;
  string Hostname = 9;
  string Version = 10;
  string Product = 11;

  //Fields completed on the server
  int64  SvrTime = 12;
  string PSMName = 13;    //Used to identify business
  string PSMPath = 14;    //Used to identify business
  string Tags = 15;        //Used to identify agent group
}

service Transfer {
  rpc Transfer (stream RawData) returns (stream Command){}
}


//pb for file upload
message UploadRequest {
  string Token = 1;
  bytes Data = 2;
}

message UploadResponse {
  enum StatusCode {
    SUCCESS = 0;
    FAILED = 1;
  }
  StatusCode Status = 1;
}

service FileExt {
  rpc Upload(stream UploadRequest) returns (UploadResponse);
}
